<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Professor Login - Grading System</title>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container">
        <div class="login-container">
            <div class="login-header">
                <i class="fas fa-graduation-cap fa-3x"></i>
                <h1>Welcome Back</h1>
                <p class="subtitle">Sign in to access the grading system</p>
            </div>
            
            <form id="login-form" class="login-form">
                <div class="form-group">
                    <label for="professorName">
                        <i class="fas fa-user"></i>
                        Full Name
                    </label>
                    <input 
                        type="text" 
                        id="professorName" 
                        required 
                        class="form-input" 
                        placeholder="Enter your full name"
                        autocomplete="name"
                    >
                </div>
                
                <div class="form-group">
                    <label for="department">
                        <i class="fas fa-building"></i>
                        Department
                    </label>
                    <input 
                        type="text" 
                        id="department" 
                        required 
                        class="form-input" 
                        placeholder="Enter your department"
                        autocomplete="organization"
                    >
                </div>

                <button type="submit" class="submit-btn">
                    <i class="fas fa-sign-in-alt"></i>
                    Start Grading
                </button>
            </form>
        </div>
    </div>

    <div id="notification" class="notification"></div>

    <script type="module">
        import { collection, query, where, getDocs, addDoc } from 'https://www.gstatic.com/firebasejs/10.7.0/firebase-firestore.js';
        import { db } from '/js/firebase-config.js';

        // Show notification function
        const showNotification = (message, type = 'error') => {
            const notification = document.getElementById('notification');
            notification.textContent = message;
            notification.className = `notification ${type}`;
            notification.style.display = 'block';
            
            setTimeout(() => {
                notification.style.display = 'none';
            }, 3000);
        };

        const handleLogin = async (e) => {
            e.preventDefault();
            
            const professorName = document.getElementById('professorName').value.trim();
            const department = document.getElementById('department').value.trim();

            if (!professorName || !department) {
                showNotification('Please fill in all fields');
                return;
            }

            try {
                // Show loading state
                const submitBtn = e.target.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Signing in...';
                submitBtn.disabled = true;

                // Check if professor already exists
                const professorsRef = collection(db, 'professors');
                const q = query(professorsRef, 
                    where('name', '==', professorName),
                    where('department', '==', department)
                );
                
                const querySnapshot = await getDocs(q);
                let professorId;

                if (querySnapshot.empty) {
                    // Create new professor document
                    const docRef = await addDoc(professorsRef, {
                        name: professorName,
                        department: department,
                        createdAt: new Date().toISOString()
                    });
                    professorId = docRef.id;
                } else {
                    professorId = querySnapshot.docs[0].id;
                }

                // Store professor info in session storage
                sessionStorage.setItem('professorId', professorId);
                sessionStorage.setItem('professorName', professorName);
                sessionStorage.setItem('department', department);

                // Show success message before redirect
                showNotification('Login successful! Redirecting...', 'success');
                
                // Redirect after a short delay
                setTimeout(() => {
                    window.location.href = '/';
                }, 1000);

            } catch (error) {
                console.error('Error during login:', error);
                showNotification('Error during login. Please try again.');
                
                // Reset button state
                submitBtn.innerHTML = originalText;
                submitBtn.disabled = false;
            }
        };

        document.getElementById('login-form').addEventListener('submit', handleLogin);
    </script>

    <style>
        .login-header {
            text-align: center;
            margin-bottom: 2rem;
        }

        .login-header i {
            color: var(--primary);
            margin-bottom: 1rem;
            font-size: 3.5rem;
        }

        .subtitle {
            color: var(--text-color);
            margin-top: 0.5rem;
            font-size: 1.1rem;
            opacity: 0.8;
        }

        .form-group label i {
            margin-right: 8px;
            color: var(--primary);
        }

        .login-container {
            background: white;
            border: 2px solid var(--primary);
        }

        .form-input {
            border-color: var(--primary-light);
        }

        .form-input:focus {
            border-color: var(--primary);
            box-shadow: 0 0 0 4px rgba(0, 180, 216, 0.1);
        }

        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: var(--radius);
            color: white;
            font-weight: 500;
            display: none;
            animation: slideIn 0.3s ease;
            z-index: 1000;
        }

        .notification.error {
            background-color: var(--error);
        }

        .notification.success {
            background-color: var(--success);
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        @media (max-width: 480px) {
            .login-header i {
                font-size: 2.5em;
            }

            .subtitle {
                font-size: 1rem;
            }

            .notification {
                top: 10px;
                right: 10px;
                left: 10px;
                text-align: center;
            }
        }
    </style>
</body>
</html> 